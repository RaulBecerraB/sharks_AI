// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sharks.Data;

#nullable disable

namespace sharks.Migrations
{
    [DbContext(typeof(SharksDbContext))]
    [Migration("20251004112424_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("sharks.Models.Shark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SharkSpeciesId")
                        .HasColumnType("int");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("TaggedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaggedLocation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SharkSpeciesId");

                    b.ToTable("Sharks");
                });

            modelBuilder.Entity("sharks.Models.SharkSpecies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageLength")
                        .HasColumnType("float");

                    b.Property<double>("AverageWeight")
                        .HasColumnType("float");

                    b.Property<string>("ConservationStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DangerLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Habitat")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("SharkSpecies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageLength = 4.5,
                            AverageWeight = 1200.0,
                            ConservationStatus = "Vulnerable",
                            DangerLevel = "High",
                            Description = "El gran tiburón blanco es una especie de elasmobranquio lamniforme de la familia Lamnidae que se encuentra en las aguas costeras de todos los océanos.",
                            Habitat = "Aguas costeras templadas y subtropicales",
                            Name = "Gran Tiburón Blanco",
                            ScientificName = "Carcharodon carcharias"
                        },
                        new
                        {
                            Id = 2,
                            AverageLength = 3.5,
                            AverageWeight = 400.0,
                            ConservationStatus = "Near Threatened",
                            DangerLevel = "High",
                            Description = "El tiburón tigre es una especie de elasmobranquio carcarriniforme conocido por sus distintivas rayas oscuras.",
                            Habitat = "Aguas tropicales y subtropicales",
                            Name = "Tiburón Tigre",
                            ScientificName = "Galeocerdo cuvier"
                        },
                        new
                        {
                            Id = 3,
                            AverageLength = 2.5,
                            AverageWeight = 90.0,
                            ConservationStatus = "Vulnerable",
                            DangerLevel = "Medium",
                            Description = "El tiburón limón es una especie de tiburón requiem de color amarillento que habita en aguas poco profundas.",
                            Habitat = "Aguas costeras poco profundas tropicales",
                            Name = "Tiburón Limón",
                            ScientificName = "Negaprion brevirostris"
                        },
                        new
                        {
                            Id = 4,
                            AverageLength = 4.0,
                            AverageWeight = 230.0,
                            ConservationStatus = "Critically Endangered",
                            DangerLevel = "Medium",
                            Description = "El tiburón martillo gigante es la especie más grande de tiburón martillo, conocido por su cabeza distintiva en forma de martillo.",
                            Habitat = "Aguas costeras tropicales y subtropicales",
                            Name = "Tiburón Martillo",
                            ScientificName = "Sphyrna mokarran"
                        },
                        new
                        {
                            Id = 5,
                            AverageLength = 2.5,
                            AverageWeight = 130.0,
                            ConservationStatus = "Vulnerable",
                            DangerLevel = "High",
                            Description = "El tiburón toro es conocido por su capacidad de nadar en agua dulce y su naturaleza agresiva.",
                            Habitat = "Aguas costeras, ríos y lagos",
                            Name = "Tiburón Toro",
                            ScientificName = "Carcharhinus leucas"
                        });
                });

            modelBuilder.Entity("sharks.Models.SharkTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatteryLevel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("Depth")
                        .HasColumnType("float");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(10,8)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(11,8)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SharkId")
                        .HasColumnType("int");

                    b.Property<string>("SignalStrength")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("Speed")
                        .HasColumnType("float");

                    b.Property<double?>("Temperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("TrackingDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SharkId");

                    b.ToTable("SharkTrackings");
                });

            modelBuilder.Entity("sharks.Models.Shark", b =>
                {
                    b.HasOne("sharks.Models.SharkSpecies", "Species")
                        .WithMany("Sharks")
                        .HasForeignKey("SharkSpeciesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("sharks.Models.SharkTracking", b =>
                {
                    b.HasOne("sharks.Models.Shark", "Shark")
                        .WithMany("TrackingData")
                        .HasForeignKey("SharkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shark");
                });

            modelBuilder.Entity("sharks.Models.Shark", b =>
                {
                    b.Navigation("TrackingData");
                });

            modelBuilder.Entity("sharks.Models.SharkSpecies", b =>
                {
                    b.Navigation("Sharks");
                });
#pragma warning restore 612, 618
        }
    }
}
